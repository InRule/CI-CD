{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "createOrUpdateCICDServicePlan": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "If set to false, provide the name and resource group of an existing service plan in the 'CICDServicePlanName' and 'servicePlanResourceGroupName' parameters. Otherwise a new plan will be created with the supplied name"
      }
    },
    "CICDServiceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the App Service resource the CICD service will be installed on"
      }
    },

    "CICDServicePlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('CICDServiceName'),'Plan')]",
      "metadata": {
        "description": "Name for the App Service Plan, defaulting to the value of the App Service's name with 'Plan' appended to the end"
      }
    },
    "CICDServicePlanSkuName": {
      "type": "string",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4",
        "I1"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "servicePlanResourceGroupName": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]",
        "metadata": {
          "description": "Optional name of the resource group for the existing app service plan. If creating a new plan, leave as the default value"
        }
      },
    "packageUri": {
      "type": "string",
      "defaultValue": "https://github.com/InRule/CI-CD/raw/main/releases/InRule.CICD.Runtime.Service.zip",
      "metadata": {
        "description": "Download URI for the CICD service package."
      }
    }
  },
  "variables": {
    "use32Bit": "[or(equals(parameters('CICDServicePlanSkuName'), 'F1'), equals(parameters('CICDServicePlanSkuName'), 'D1'))]",
    "CICDServicePlanName": "[if(empty(parameters('CICDServicePlanName')), concat(parameters('CICDServiceName'),'Plan'), parameters('CICDServicePlanName'))]"
  },
  "resources": [
    {
      "apiVersion": "2020-06-01",
      "name": "pid-50659428-9551-4c59-b7a5-79bf3402de4f",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "condition": "[parameters('createOrUpdateCICDServicePlan')]",
      "name": "AppServicePlanTemplate",
      "apiVersion": "2017-05-10",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('servicePlanResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "name": "[variables('CICDServicePlanName')]",
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2016-09-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "name": "[variables('CICDServicePlanName')]"
              },
              "sku": {
                "name": "[parameters('CICDServicePlanSkuName')]"
              }
            }
          ]
        }
      }
    },
    {
      "name": "[parameters('CICDServiceName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Resources/deployments', 'AppServicePlanTemplate')]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('CICDServicePlanName')))]": "Resource"
      },
      "properties": {
        "serverFarmId": "[resourceId(parameters('servicePlanResourceGroupName'), 'Microsoft.Web/serverfarms', variables('CICDServicePlanName'))]",
        "siteConfig": {
          "use32BitWorkerProcess": "[variables('use32Bit')]"
        }
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "apiVersion": "2016-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', parameters('CICDServiceName'))]"
          ],
          "properties": {
            "packageUri": "[parameters('packageUri')]"
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2016-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', parameters('CICDServiceName'), '/Extensions/MSDeploy')]",
            "[concat('Microsoft.Web/sites/', parameters('CICDServiceName'))]"
          ],
          "properties": {
            "AesEncryptDecryptKey": "b14ca5898a4e4133bbce2ea2315a1916",
            "ApiKeyAuthentication.ApiKey": "89864797-265F-4697-AC92-4E2A3F9771F0",
            "ApprovalFlow.ApplyLabelApprover": "admin",
            "ApprovalFlow.FilterByLabels":"LIVE",
            "ApprovalFlow.RequesterNotificationChannel": "Teams",
            "ApprovalFlow.NotificationChannel": "Teams",
            "FilterEventsByUser": "",
            "aspnet:UseTaskFriendlySynchronizationContext": "true",
            "CatalogEvents": "CheckinRuleApp ApplyLabel CheckoutDefs",
            "CatalogManagerUri": "{https://CatalogManagerURL.azurewebsites.net/}",
            "CatalogPassword": "password",
            "CatalogUsername": "admin",
            "DebugNotifications": "Teams",
            "DevOps.DevOpsOrganization": "",
            "DevOps.DevOpsPipelineID": "",
            "DevOps.DevOpsProject": "",
            "DevOps.DevOpsToken": "",
            "Email.EmailSendFrom": "",
            "Email.EmailSendFromName": "",
            "Email.EmailSendTo": "",
            "Email.EmailSendToName": "",
            "Email.SendGridApiKey": "",
            "GitHub.GitHubFolder": "",
            "GitHub.GitHubProductName": "",
            "GitHub.GitHubProductVersion": "",
            "GitHub.GitHubRepo": "",
            "GitHub.GitHubToken": "",
            "IsCloudBased": "true",
            "OnApplyLabel": "Teams ApprovalFlow",
            "OnCheckinRuleApp": "Teams",
            "OnCheckoutDefs": "Teams",
            "RuleAppDiffReport.NotificationChannel": "",
            "RuleAppDiffReport.UploadTo": "",
            "RuleAppReport.NotificationChannel": "",
            "RuleAppReport.UploadTo": "",
            "Teams.TeamsWebhookUrl": "{TeamsWebhookUrl}"
          }
        }
      ]
    }
  ],
  "outputs": {}
}
